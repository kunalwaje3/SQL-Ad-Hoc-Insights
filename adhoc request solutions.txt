1)Provide the list of markets in which customer "Atliq Exclusive" operates its
business in the APAC region.

---> select 
distinct(market) from dim_customer 
where customer = "Atliq Exclusive" 
and region = "APAC"

2)What is the percentage of unique product increase in 2021 vs. 2020? The
final output contains these fields,
unique_products_2020
unique_products_2021
percentage_chg

---> with table1 as ( select count(distinct(product_code)) AS Unique_product_2020
from fact_sales_monthly 
where fiscal_year = 2020 ) ,
table2 as (select count(distinct(product_code)) AS Unique_product_2021
from fact_sales_monthly 
where fiscal_year = 2021)
select Unique_product_2020 , Unique_product_2021 ,
round(((Unique_product_2021 - Unique_product_2020) / Unique_product_2020 ) *100 ,2) AS percentage_change
from table1 
CROSS JOIN table2;

3.Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains 2 fields,
segment
product_count

---> select count(distinct(product_code)) as product_code , segment from dim_product 
group by segment
order by product_code desc

4.Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
segment
product_count_2020
product_count_2021
difference

---> with table1 as 
(
select segment , count(distinct(product)) AS product_count_2020
from dim_product as p 
join fact_sales_monthly as s on
p.product_code = s.product_code
where fiscal_year = 2020
GROUP BY segment) ,
table2 as (select segment, count(distinct(product)) AS product_count_2021
from dim_product as p
join fact_sales_monthly as s on
p.product_code = s.product_code
where fiscal_year = 2021
GROUP BY segment)
select table1.segment ,product_count_2020, product_count_2021 ,
(product_count_2021 - product_count_2020) AS difference 
from table1 
join table2 on table1.segment = table2.segment
ORDER BY product_count_2021 DESC;

5.Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost

--->select p.product_code, p.product, manufacturing_cost
from dim_product as p 
join fact_manufacturing_cost as m on 
p.product_code=m.product_code
WHERE m.manufacturing_cost = (
    SELECT MAX(manufacturing_cost)
    FROM fact_manufacturing_cost
)
OR m.manufacturing_cost = (
    SELECT MIN(manufacturing_cost)
    FROM fact_manufacturing_cost
);


6.Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage

---> select c.customer_code, c.customer, 
round(avg(pre_invoice_discount_pct)*100,2) as average_discount_percentage
from fact_pre_invoice_deductions pre
join dim_customer c on 
c.customer_code =  pre.customer_code
WHERE market = 'India' and fiscal_year = 2021
group by c.customer_code , c.customer
order by average_discount_percentage desc
limit 5

7.Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount

---> SELECT monthname(s.date) as months, year(s.date) as years ,
round(sum(s.sold_quantity * g.gross_price) , 2 ) as Gross_sales_amount 
from fact_gross_price g join fact_sales_monthly s on
g.product_code = s.product_code
join dim_customer c on s.customer_code = c.customer_code
where c.customer = "Atliq Exclusive"
GROUP BY months,years;

8.In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity

---> SELECT 
CASE
    WHEN date BETWEEN '2019-09-01' AND '2019-11-01' then 1  
    WHEN date BETWEEN '2019-12-01' AND '2020-02-01' then 2
    WHEN date BETWEEN '2020-03-01' AND '2020-05-01' then 3
    WHEN date BETWEEN '2020-06-01' AND '2020-08-01' then 4
    end as Quarters,
    sum(sold_quantity) AS total_sold_quantity
    FROM fact_sales_monthly
    where fiscal_year = 2020
    group by Quarters
    order by total_sold_quantity DESC;

9.Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage

---> with channel_sales as (
select c.channel,round(sum(sold_quantity * gross_price)/1000000,2) as gross_sales_mln from dim_customer c
join fact_sales_monthly s on c.customer_code = s.customer_code
join fact_gross_price g on s.product_code = g.product_code
where s.fiscal_year = 2021
group by c.channel ),
total_gross_sale as (
select sum(gross_sales_mln) as total_gross_sales_mln 
from channel_sales )

select cs.channel, cs.gross_sales_mln,
round((cs.gross_sales_mln / ts.total_gross_sales_mln)*100,2) as percentages
from channel_sales as cs
cross join total_gross_sale as ts
ORDER BY cs.gross_sales_mln DESC;

10. Get the Top 3 products in each division that have a high
total_sold_quantity in the fiscal_year 2021? The final output contains these
fields,
division
product_code
product
total_sold_quantity
rank_order


---> with productrank as (
select 
p.division,
p.product_code,
p.product,
sum(s.sold_quantity * g.gross_price ) as total_sold_quantity,
rank() over (partition by p.division order by sum(s.sold_quantity * g.gross_price ) desc) as rank_order
from dim_product p join
fact_sales_monthly AS s ON p.product_code = s.product_code
JOIN fact_gross_price AS g ON p.product_code = g.product_code
where s.fiscal_year = 2021
group by p.division, p.product_code, p.product
)

select 
division,
product_code,
product,
total_sold_quantity,
rank_order
from productrank
where rank_order <= 3


